@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime

<div class="container-fluid">
    <div class="row p-3">
        <div class="col">
            <RadzenGoogleMap @ref=map style="height: 400px" Options=@(new Dictionary<string, object> { { "disableDoubleClickZoom", true } })
                Zoom=@zoom Center=@(new GoogleMapPosition() { Lat = 42.6977, Lng = 23.3219 }) MapClick=@OnMapClick MarkerClick=@OnMarkerClick
                ApiKey="">
                <Markers>
                    @if (randInt == 1)
                    {
                        <RadzenGoogleMapMarker Title="London" Label="London" Position=@(new GoogleMapPosition() { Lat = 51.5074, Lng = 0.1278 }) />
                    }
                    @if (randInt == 2)
                    {
                        <RadzenGoogleMapMarker Title="Paris" Label="Paris" Position=@(new GoogleMapPosition() { Lat = 48.8566, Lng = 2.3522  }) />
                    }
                    @if (randInt == 3)
                    {
                        <RadzenGoogleMapMarker Title="Bangkok" Label="Bangkok" Position=@(new GoogleMapPosition() { Lat = 13.7563, Lng = 100.5018  }) />
                    }
                </Markers>
            </RadzenGoogleMap>
        </div>
    </div>
</div>

@code {
    [Parameter] public string MissionId { get; set; } = "";
    int zoom = 3;
    RadzenGoogleMap map;
    int randInt = 3;

    protected override void OnAfterRender(bool firstRender)
    {
        Random rand = new Random(MissionId.GetHashCode());
        randInt = rand.Next(1, 4);
    }

    void OnMapClick(GoogleMapClickEventArgs args)
    {
        Console.WriteLine($"Map clicked at Lat: {args.Position.Lat}, Lng: {args.Position.Lng}");
    }

    async Task OnMarkerClick(RadzenGoogleMapMarker marker)
    {
        var message = $"Latitude: <b>{marker.Position.Lat}</b>, Longitude: <b>{marker.Position.Lng}</b>";

        var code = $@"
        var map = Radzen['{map.UniqueID}'].instance;
        var marker = map.markers.find(m => m.title == '{marker.Title}');
        if(window.infoWindow) {{window.infoWindow.close();}}
        window.infoWindow = new google.maps.InfoWindow({{content: '{message}'}});
        setTimeout(() => window.infoWindow.open(map, marker), 200);
        ";

        await JSRuntime.InvokeVoidAsync("eval", code);
    }
}