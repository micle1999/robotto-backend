@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime

<div class="container-fluid">
    <div class="row p-3">
        <div class="col">
            <RadzenGoogleMap @ref=map style="height: 400px" Options=@(new Dictionary<string, object> { { "disableDoubleClickZoom", true } })
                Zoom=@zoom Center=@(new GoogleMapPosition() { Lat = 13.7563, Lng = 100.5018 }) MapClick=@OnMapClick MarkerClick=@OnMarkerClick
                ApiKey="">
                <Markers>
                    <RadzenGoogleMapMarker Title="@labels[randInt]" Label="@labels[randInt]" Position=@(new GoogleMapPosition() { Lat = @latitudes[randInt], Lng = @longitudes[randInt]  }) />
                </Markers>
            </RadzenGoogleMap>
        </div>
    </div>
</div>

@code {
    [Parameter] public string MissionId { get; set; } = "";
    int zoom = 3;
    RadzenGoogleMap map;
    int randInt = 0;
    string[] labels = 
    {
        "Bangkok",
        "Jakarta",
        "Manila",
        "Hanoi",
        "Kuala Lumpur",
        "Singapore",
        "Phnom Penh",
        "Yangon"
    };
    double[] latitudes =
    {
        13.7563,
        -6.2088,
        13.4125,
        21.0285,
        3.1390,
        1.3521,
        11.5564,
        16.8661
    };
    double[] longitudes =
    {
        100.5018,
        106.8456,
        122.5650,
        105.8542,
        101.6869,
        103.8198,
        104.9282,
        96.1951
    };

    protected override void OnAfterRender(bool firstRender)
    {
        Random rand = new Random(MissionId.GetHashCode());
        randInt = rand.Next(0, labels.Length);
    }

    void OnMapClick(GoogleMapClickEventArgs args)
    {
        Console.WriteLine($"Map clicked at Lat: {args.Position.Lat}, Lng: {args.Position.Lng}");
    }

    async Task OnMarkerClick(RadzenGoogleMapMarker marker)
    {
        var message = $"Latitude: <b>{marker.Position.Lat}</b>, Longitude: <b>{marker.Position.Lng}</b>";

        var code = $@"
            var map = Radzen['{map.UniqueID}'].instance;
            var marker = map.markers.find(m => m.title == '{marker.Title}');
            if(window.infoWindow) {{window.infoWindow.close();}}
            window.infoWindow = new google.maps.InfoWindow({{content: '{message}'}});
            setTimeout(() => window.infoWindow.open(map, marker), 200);
            ";

        await JSRuntime.InvokeVoidAsync("eval", code);
    }
}